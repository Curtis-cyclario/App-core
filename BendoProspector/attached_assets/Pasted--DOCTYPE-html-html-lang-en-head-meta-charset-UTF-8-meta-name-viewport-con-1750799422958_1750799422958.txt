<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Project Plan: 3D Geo-Interfacing Application</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;900&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #F0F4F8;
        }
        .gradient-text {
            background: linear-gradient(90deg, #1E3A8A, #3B82F6);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }
        .card {
            background-color: white;
            border-radius: 0.75rem;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
            padding: 1.5rem;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
        }
        .chart-container {
            position: relative;
            width: 100%;
            max-width: 800px;
            margin-left: auto;
            margin-right: auto;
            height: 300px;
            max-height: 400px;
        }
        @media (min-width: 768px) {
            .chart-container {
                height: 400px;
            }
        }
        .flow-line {
            position: relative;
            padding-left: 2.5rem;
        }
        .flow-line::before {
            content: '';
            position: absolute;
            left: 20px;
            top: 1rem;
            bottom: 1rem;
            width: 2px;
            background-color: #DBEAFE;
        }
        .flow-item::before {
            content: '';
            position: absolute;
            left: 12px;
            top: 12px;
            width: 18px;
            height: 18px;
            border-radius: 9999px;
            background-color: #3B82F6;
            border: 4px solid #DBEAFE;
        }
    </style>
</head>
<body class="text-gray-800">

    <div class="container mx-auto p-4 md:p-8 max-w-7xl">

        <header class="text-center my-8 md:my-16">
            <h1 class="text-4xl md:text-6xl font-black gradient-text">Project Overhaul</h1>
            <p class="mt-4 text-lg md:text-2xl font-semibold text-gray-600">Building a Professional 3D Geo-Interfacing Application</p>
            <p class="mt-2 text-base text-gray-500 max-w-3xl mx-auto">This plan outlines the development of a high-performance tool for visualizing geospatial data, moving beyond simple interactors to a robust, professional-grade platform.</p>
        </header>

        <main class="space-y-12 md:space-y-20">

            <section id="critical-requirements">
                <h2 class="text-2xl md:text-3xl font-bold text-center mb-8 text-blue-900">Immediate & Critical Requirements</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                    
                    <div class="card text-center">
                        <div class="text-5xl mb-4 text-blue-500">üåç</div>
                        <h3 class="text-xl font-bold mb-2">Core Visualization</h3>
                        <p class="text-gray-600 text-sm">Effectively render complex 3D terrain and diverse geospatial data, including elevation models and vector data.</p>
                    </div>

                    <div class="card text-center">
                        <div class="text-5xl mb-4 text-blue-500">‚öôÔ∏è</div>
                        <h3 class="text-xl font-bold mb-2">No Wasteful Implements</h3>
                        <p class="text-gray-600 text-sm">A strict focus on stable, functional, and purposeful components. Prioritize data integrity over frivolous elements.</p>
                    </div>

                    <div class="card text-center">
                        <div class="text-5xl mb-4 text-blue-500">‚ö°Ô∏è</div>
                        <h3 class="text-xl font-bold mb-2">Efficiency & Performance</h3>
                        <p class="text-gray-600 text-sm">Optimized rendering and streamlined data handling to minimize resource consumption and ensure a smooth user experience.</p>
                    </div>
                    
                    <div class="card text-center">
                        <div class="text-5xl mb-4 text-blue-500">üñ•Ô∏è</div>
                        <h3 class="text-xl font-bold mb-2">Professional UI</h3>
                        <p class="text-gray-600 text-sm">A clean, intuitive interface designed for professionals, emphasizing clarity, functionality, and ease of access to tools.</p>
                    </div>
                </div>
            </section>

            <section id="functional-areas">
                <h2 class="text-2xl md:text-3xl font-bold text-center mb-8 text-blue-900">Key Functional Areas by Priority</h2>
                <div class="card">
                    <p class="text-center text-gray-600 mb-6">Development will be prioritized across these core functional areas, with the 3D Viewport forming the essential foundation for all subsequent features. The chart below illustrates the relative development focus.</p>
                    <div class="chart-container">
                        <canvas id="priorityChart"></canvas>
                    </div>
                </div>
            </section>
            
            <section id="development-flow">
                <h2 class="text-2xl md:text-3xl font-bold text-center mb-8 text-blue-900">Development Workflow</h2>
                 <div class="card md:col-span-2">
                    <p class="text-center text-gray-600 mb-8">The project will be built feature by feature, ensuring a stable foundation before adding complexity. This structured flow ensures modularity and maintainability.</p>
                    <div class="flow-line relative">
                        <div class="flow-item relative mb-8">
                            <h3 class="text-xl font-bold text-blue-800 ml-4">1. 3D Viewport</h3>
                            <ul class="list-disc list-inside ml-4 mt-2 text-gray-600 space-y-1">
                                <li>Utilize Three.js for robust 3D rendering.</li>
                                <li>Implement smooth and precise camera controls (OrbitControls).</li>
                                <li>Establish a clear local XYZ coordinate system.</li>
                            </ul>
                        </div>
                        <div class="flow-item relative mb-8">
                            <h3 class="text-xl font-bold text-blue-800 ml-4">2. Terrain Loading & Visualization</h3>
                             <ul class="list-disc list-inside ml-4 mt-2 text-gray-600 space-y-1">
                                <li>Load and display heightmap data for realistic terrain.</li>
                                <li>Implement efficient geometry generation for performance.</li>
                                <li>Allow for basic visual styling (color/texture).</li>
                            </ul>
                        </div>
                        <div class="flow-item relative mb-8">
                            <h3 class="text-xl font-bold text-blue-800 ml-4">3. Geographical Data Integration</h3>
                             <ul class="list-disc list-inside ml-4 mt-2 text-gray-600 space-y-1">
                                <li>Architect for future support of points, lines, and polygons.</li>
                                <li>Anticipate handling standard formats like GeoJSON.</li>
                            </ul>
                        </div>
                        <div class="flow-item relative">
                            <h3 class="text-xl font-bold text-blue-800 ml-4">4. Core Interactions</h3>
                             <ul class="list-disc list-inside ml-4 mt-2 text-gray-600 space-y-1">
                                <li>Enable basic mouse-based scene navigation.</li>
                                <li>Set up raycasting for future object selection.</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </section>

            <section id="quality-gates">
                <h2 class="text-2xl md:text-3xl font-bold text-center mb-8 text-blue-900">Guiding Principles & Quality Gates</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                    <div class="card border-l-4 border-green-500">
                        <h3 class="text-xl font-bold mb-4 text-green-700">‚úÖ Do's: Non-Functional Requirements</h3>
                        <ul class="space-y-3 text-gray-600">
                            <li class="flex items-start"><span class="text-green-500 mr-2">‚úì</span><span><b>High Code Quality:</b> Generate clean, well-commented, and modular code.</span></li>
                            <li class="flex items-start"><span class="text-green-500 mr-2">‚úì</span><span><b>Robust Error Handling:</b> Implement clear user feedback without disruptive alerts.</span></li>
                            <li class="flex items-start"><span class="text-green-500 mr-2">‚úì</span><span><b>Full Responsiveness:</b> Ensure the layout and viewport adapt to all screen sizes.</span></li>
                            <li class="flex items-start"><span class="text-green-500 mr-2">‚úì</span><span><b>Future-proof Extensibility:</b> Structure the codebase for easy future expansion.</span></li>
                        </ul>
                    </div>
                    <div class="card border-l-4 border-red-500">
                        <h3 class="text-xl font-bold mb-4 text-red-700">‚ùå Don'ts: Avoid At All Costs</h3>
                        <ul class="space-y-3 text-gray-600">
                            <li class="flex items-start"><span class="text-red-500 mr-2">‚úó</span><span>Simplistic or "game-like" visual effects.</span></li>
                            <li class="flex items-start"><span class="text-red-500 mr-2">‚úó</span><span>Unnecessary dependencies that add bloat.</span></li>
                            <li class="flex items-start"><span class="text-red-500 mr-2">‚úó</span><span>Purely decorative or distracting UI elements.</span></li>
                            <li class="flex items-start"><span class="text-red-500 mr-2">‚úó</span><span>Code that is difficult to debug, maintain, or extend.</span></li>
                        </ul>
                    </div>
                </div>
            </section>

        </main>

        <footer class="text-center mt-12 md:mt-20 py-8 border-t border-gray-200">
            <p class="text-gray-500">This infographic represents the project brief for a professional-grade 3D geo-interfacing application.</p>
        </footer>

    </div>

    <script>
        function wrapLabels(label, max_width) {
            const words = label.split(' ');
            const lines = [];
            let current_line = '';
            for (const word of words) {
                if ((current_line + ' ' + word).trim().length > max_width) {
                    lines.push(current_line.trim());
                    current_line = word;
                } else {
                    current_line = (current_line + ' ' + word).trim();
                }
            }
            if (current_line) {
                lines.push(current_line.trim());
            }
            return lines;
        }

        const rawLabels = ['3D Viewport', 'Terrain Loading & Visualization', 'Geographical Data Integration', 'Core Interactions'];
        const processedLabels = rawLabels.map(label => wrapLabels(label, 16));

        const ctx = document.getElementById('priorityChart').getContext('2d');
        const priorityChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: processedLabels,
                datasets: [{
                    label: 'Development Priority',
                    data: [95, 80, 65, 50],
                    backgroundColor: [
                        '#1E3A8A',
                        '#2563EB',
                        '#3B82F6',
                        '#60A5FA'
                    ],
                    borderColor: [
                        '#1E40AF',
                        '#1D4ED8',
                        '#2563EB',
                        '#3B82F6'
                    ],
                    borderWidth: 1,
                    borderRadius: 5,
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                indexAxis: 'y',
                scales: {
                    x: {
                        beginAtZero: true,
                        grid: {
                            color: '#E5E7EB',
                        },
                        ticks: {
                            color: '#4B5563',
                            font: {
                                weight: '600'
                            }
                        }
                    },
                    y: {
                         grid: {
                            display: false,
                        },
                        ticks: {
                            color: '#374151',
                             font: {
                                weight: '600',
                                size: 14,
                            }
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        backgroundColor: '#111827',
                        titleFont: {
                            size: 16
                        },
                        bodyFont: {
                            size: 14
                        },
                        padding: 12,
                        callbacks: {
                            title: function(tooltipItems) {
                                const item = tooltipItems[0];
                                let label = item.chart.data.labels[item.dataIndex];
                                if (Array.isArray(label)) {
                                  return label.join(' ');
                                } else {
                                  return label;
                                }
                            }
                        }
                    }
                }
            }
        });
    </script>

</body>
</html>
